name: Enhanced News Intelligence + Sentiment Pipeline

on:
  schedule:
    # Same schedule: 6:30 AM ET (11:30 UTC) and 7:00 PM ET (00:00 UTC)
    - cron: '30 11 * * *'  # 6:30 AM ET - Morning brief
    - cron: '0 0 * * *'    # 7:00 PM ET - Evening wrap-up
  workflow_dispatch:  # Manual trigger

jobs:
  # Your existing news pipeline
  news_pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up Google Cloud credentials
      env:
        GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CLOUD_KEY }}
      run: |
        echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > /tmp/gcp-key.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json" >> $GITHUB_ENV
    
    - name: Run News Intelligence Pipeline
      run: |
        python main.py
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json
    
    - name: Clean up credentials
      if: always()
      run: |
        rm -f /tmp/gcp-key.json

  # NEW: Enhanced sentiment pipeline
  sentiment_pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    needs: news_pipeline  # Run after news pipeline
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up Google Cloud credentials
      env:
        GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CLOUD_KEY }}
      run: |
        echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > /tmp/gcp-key.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json" >> $GITHUB_ENV
    
    - name: Run Enhanced Sentiment Analysis Pipeline
      run: |
        python enhanced_sentiment_tracker.py
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json
        # All your existing API keys
        BRAVE_API_KEY: ${{ secrets.BRAVE_API_KEY }}
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
        MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
        API_NINJAS_KEY: ${{ secrets.API_NINJAS_KEY }}
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        BLUESKY_USERNAME: ${{ secrets.BLUESKY_USERNAME }}
        BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
        GOOGLE_CUSTOM_SEARCH_API_KEY: ${{ secrets.GOOGLE_CUSTOM_SEARCH_API_KEY }}
        GOOGLE_CUSTOM_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_CUSTOM_SEARCH_ENGINE_ID }}
    
    - name: Clean up credentials
      if: always()
      run: |
        rm -f /tmp/gcp-key.json
    
    - name: Upload sentiment reports
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: sentiment-analysis-reports
        path: |
          *.json
          *.csv
        retention-days: 30